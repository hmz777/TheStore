@using TheStore.SharedModels.Models.ValueObjectsDtos;
@using TheStore.Web.BlazorApp.Client.Models;
@using TheStore.SharedModels.Models.Products;

<div class="variant-selector @GetSizeClass(ControlSize)">
	@foreach (var variant in Variants)
	{
		<button class="variant-selection @(ActiveVariantSku == variant.Sku ? "active" : "")"
				type="button"
				style="background-size:100% 100%;background-image:url(@variant.Color.GetMainImage().StringFileUri)"
				@onclick="() => ChooseVariant(variant.Sku)"
				@key="variant.Sku"></button>
	}
</div>

@code {
	[Parameter]
	public List<VariantSelectorModel> Variants { get; set; } = [];

	[Parameter]
	public EventCallback<string> VariantChosen { get; set; }

	[Parameter]
	public ControlSize ControlSize { get; set; } = ControlSize.Normal;

	private string ActiveVariantSku { get; set; }

	protected override void OnInitialized()
	{
		ActiveVariantSku = Variants.FirstOrDefault(v => v.Options.IsMainVariant)?.Sku ?? Variants.First().Sku;
	}

	private string GetSizeClass(ControlSize controlSize) => controlSize switch
	{
		ControlSize.Small => "variant-selector--small",
		ControlSize.Normal => "variant-selector--normal",
		ControlSize.Large => "variant-selector--large",
		_ => "variant-selector--small"
	};

	private async Task ChooseVariant(string variantSku)
	{
		await VariantChosen.InvokeAsync(variantSku);

		ActiveVariantSku = variantSku;

		if (ShouldRender())
		{
			StateHasChanged();
		}
	}
}