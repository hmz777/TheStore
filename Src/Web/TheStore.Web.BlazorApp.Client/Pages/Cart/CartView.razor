@page "/cart"
@using MediatR
@using TheStore.SharedModels.Models.Cart
@using TheStore.Web.BlazorApp.Client.Mediator.Commands
@using TheStore.Web.BlazorApp.Client.Mediator.Queries
@using TheStore.Web.BlazorApp.Client.Shared
@using TheStore.SharedModels.Models.Products;
@using TheStore.Web.BlazorApp.Client.Helpers;
@using TheStore.Web.BlazorApp.Client.Pages.Cart.Components
@inject IJSRuntime JS;
@inject IMediator Mediator;
@implements IAsyncDisposable;
@attribute [Authorize]

<div class="container mb-5">
    <div class="row gx-5">
        <div class="col-12 col-lg-8">
            <div id="bag-content">
                <h1 class="my-4">Bag</h1>
                <div>
                    @if (Cart != null)
                    {
                        @foreach (var item in Cart.Items)
                        {
                            <CartItem @key="item" Item="item" />
                        }
                    }
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-4">
            <div id="summary-content">
                <h2 class="my-4">Summary</h2>
                <div>
                    <div class="summary-cell">
                        <Accordion class="w-100" Title="Do you have a promo code?">
                            <Promo />
                        </Accordion>
                    </div>
                    <div class="info-cell summary-cell">
                        <span class="info-cell-label">
                            Subtotal
                            <a tabindex="0"
                               role="button"
                               data-bs-placement="bottom"
                               data-bs-toggle="popover"
                               data-bs-trigger="focus"
                               data-bs-title="Popover title"
                               data-bs-content="And here's some amazing content. It's very engaging. Right?">
                                <i class="las la-question-circle"></i>
                            </a>
                        </span>
                        <span class="info-cell-value">@Sum</span>
                    </div>
                    <div class="info-cell summary-cell">
                        <span class="info-cell-label">
                            Estimated Shipping & Handling
                            <a tabindex="0"
                               role="button"
                               data-bs-placement="bottom"
                               data-bs-toggle="popover"
                               data-bs-trigger="focus"
                               data-bs-title="Popover title"
                               data-bs-content="And here's some amazing content. It's very engaging. Right?">
                                <i class="las la-question-circle"></i>
                            </a>
                        </span>
                        <span class="info-cell-value">@Shipping_Handling</span>
                    </div>
                    <div class="info-cell summary-cell">
                        <span class="info-cell-label">
                            Estimated Tax
                            <a tabindex="0"
                               role="button"
                               data-bs-placement="bottom"
                               data-bs-toggle="popover"
                               data-bs-trigger="focus"
                               data-bs-title="Popover title"
                               data-bs-content="And here's some amazing content. It's very engaging. Right?">
                                <i class="las la-question-circle"></i>
                            </a>
                        </span>
                        <span class="info-cell-value">@Tax</span>
                    </div>
                    <span class="horizontal-separator w-100"></span>
                    <div class="info-cell summary-cell m-0">
                        <span class="info-cell-label">Total</span>
                        <span class="info-cell-value">@Total</span>
                    </div>
                    <span class="horizontal-separator w-100"></span>
                    <div class="summary-cell">
                        <button class="action-btn action-btn--block action-btn--primary mb-3">Checkout</button>
                        <button class="action-btn action-btn--block action-btn--secondary">Save to my account</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private IJSObjectReference? appUtilsModule;

    private CartDto? Cart { get; set; }

    private decimal Sum { get; set; }
    private decimal Shipping_Handling { get; set; }
    private decimal Tax { get; set; }
    private decimal Total => Sum + Shipping_Handling + Tax;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            appUtilsModule = await JS.InvokeAsync<IJSObjectReference>("import", "./modules/AppUtilsModule.js");
            await appUtilsModule.InvokeVoidAsync("InitBootstrapPopovers");

            await FetchCart();
        }
    }

    private async Task FetchCart()
    {
        var result = await Mediator.Send(new GetCartQuery());

        if (result.IsSuccessful)
        {
            Cart = result.Value;
        }
        else
        {
            // TODO: Use a service for status messages to show errors
        }

        if (ShouldRender())
        {
            StateHasChanged();
        }
    }

    private async Task OnItemUpdated()
    {
        // Save cart
        var result = await Mediator.Send(new SaveCartCommand());

        // Order Sum
        Sum = result.Value;

        if (ShouldRender())
        {
            StateHasChanged();
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (appUtilsModule is not null)
        {
            await appUtilsModule.DisposeAsync();
        }
    }
}