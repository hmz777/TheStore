@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.Security.Claims;
@inject NavigationManager Navigation

<header id="top-header">
	<nav class="top-navbar">
		<div class="logo-container">
			<Logo />
		</div>
		<ul class="top-navbar-inner">
			<li>
				<NavLink ActiveClass="active" href="/catalog">Catalog</NavLink>
			</li>
			<li>
				<NavLink ActiveClass="active" href="/contact">Contact</NavLink>
			</li>
			<li>
				<NavLink ActiveClass="active" href="/about">About</NavLink>
			</li>
			<li>
				<hr class="vertical-separator" />
			</li>
			<li class="d-flex">
				<AuthorizeView>
					<Authorized>
						<NavLink class="action-btn action-btn--primary action-btn--small mr-2" href="/user/profile">
							@(context.User?.FindFirst("email")?.Value ?? "Error")
						</NavLink>
						<button class="action-btn action-btn--secondary action-btn--small" type="button" @onclick="BeginLogout">Logout</button>
					</Authorized>
					<NotAuthorized>
						<div class="action-btn-group">
							<button class="action-btn action-btn--primary action-btn--small" type="button" @onclick="BeginLogin">Login</button>
							<NavLink class="action-btn action-btn--primary action-btn--small" href="/authentication/register">Register</NavLink>
						</div>
					</NotAuthorized>
					<Authorizing>
						<i class="las la-circle-notch la-spin la-2x"></i>
					</Authorizing>
				</AuthorizeView>
			</li>
		</ul>
	</nav>
</header>

@code {

	[CascadingParameter]
	public Task<AuthenticationState>? AuthenticationState { get; set; }

	private void BeginLogin(MouseEventArgs args)
	{
		Navigation.NavigateToLogout("authentication/login");
	}

	private void BeginLogout(MouseEventArgs args)
	{
		Navigation.NavigateToLogout("authentication/logout");
	}
}
