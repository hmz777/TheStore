@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using System.Security.Claims;
@inject NavigationManager Navigation

<header id="top-header">
	<div id="upper-navbar" class="@(searchExpanded ? "d-none" : "")">
		<div class="upper-navbar-section">
			<NavLink href="#" class="nav-link">Find a Store</NavLink>
			<NavLink href="#" class="nav-link">Help</NavLink>
			<AuthorizeView>
				<Authorized>
					<NavLink href="/user/profile">
						@(context.User?.FindFirst("email")?.Value ?? "Error")
					</NavLink>
					<button type="button" @onclick="BeginLogout">Logout</button>
				</Authorized>
				<NotAuthorized>
					<div class="action-btn-group">
						<button type="button" @onclick="BeginLogin">Login</button>
						<NavLink href="/authentication/register">Register</NavLink>
					</div>
				</NotAuthorized>
				<Authorizing>
					<i class="las la-circle-notch la-spin la-2x"></i>
				</Authorizing>
			</AuthorizeView>
		</div>
	</div>
	<nav id="top-navbar" class="@(searchExpanded ? "nav-search-expanded" : "")">
		<ul class="top-navbar-inner">
			<li class="nav-item me-auto">
				<div class="logo-container">
					<Logo />
				</div>
			</li>
			<li class="nav-item">
				<NavLink class="nav-btn catalog-btn" ActiveClass="active" href="/catalog">Catalog</NavLink>
			</li>
			<li class="nav-item nav-item-search">
				<GlobalSearch OnSearch="OnSearch" @bind-SearchTerm="searchTerm" />
			</li>
			@if (searchExpanded)
			{
				<li id="search-cancel">
					<button class="nav-btn" @onclick="OnCancelSearch" type="button">Cancel</button>
				</li>
			}
		</ul>
	</nav>
	<div id="lower-navbar" class="@(searchExpanded ? "d-none" : "")">
		Announcements go here!
	</div>
</header>

@code {
	private bool searchExpanded = false;

	private string searchTerm = string.Empty;

	private void BeginLogin(MouseEventArgs args)
	{
		Navigation.NavigateToLogout("authentication/login");
	}

	private void BeginLogout(MouseEventArgs args)
	{
		Navigation.NavigateToLogout("authentication/logout");
	}

	private void OnSearch()
	{
		if (searchExpanded == false)
		{
			searchExpanded = true;

			if (ShouldRender())
			{
				StateHasChanged();
			}
		}
	}

	private void OnCancelSearch()
	{
		searchExpanded = false;
		searchTerm = string.Empty;

		if (ShouldRender())
		{
			StateHasChanged();
		}
	}
}
