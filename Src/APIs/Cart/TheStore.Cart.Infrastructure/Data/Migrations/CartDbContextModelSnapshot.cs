// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheStore.Cart.Infrastructure.Data;

#nullable disable

namespace TheStore.Cart.Infrastructure.Data.Migrations
{
    [DbContext(typeof(CartDbContext))]
    partial class CartDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Buyer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Buyers");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Cart", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("BuyerIdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyerIdId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Wishlist", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("BuyerIdId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyerIdId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("CartItem");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Entities.WishlistItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("WishlistItem");
                });

            modelBuilder.Entity("TheStore.Cart.Core.ValueObjects.Keys.BuyerId", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BuyerId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.ValueObjects.Keys.CartItemId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItemId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.ValueObjects.Keys.WishlistItemId", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("WishlistId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("WishlistId");

                    b.ToTable("WishlistItemId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Cart", b =>
                {
                    b.HasOne("TheStore.Cart.Core.ValueObjects.Keys.BuyerId", "BuyerId")
                        .WithMany()
                        .HasForeignKey("BuyerIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Wishlist", b =>
                {
                    b.HasOne("TheStore.Cart.Core.ValueObjects.Keys.BuyerId", "BuyerId")
                        .WithMany()
                        .HasForeignKey("BuyerIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyerId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.ValueObjects.Keys.CartItemId", b =>
                {
                    b.HasOne("TheStore.Cart.Core.Aggregates.Cart", null)
                        .WithMany("items")
                        .HasForeignKey("CartId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.ValueObjects.Keys.WishlistItemId", b =>
                {
                    b.HasOne("TheStore.Cart.Core.Aggregates.Wishlist", null)
                        .WithMany("items")
                        .HasForeignKey("WishlistId");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Cart", b =>
                {
                    b.Navigation("items");
                });

            modelBuilder.Entity("TheStore.Cart.Core.Aggregates.Wishlist", b =>
                {
                    b.Navigation("items");
                });
#pragma warning restore 612, 618
        }
    }
}
